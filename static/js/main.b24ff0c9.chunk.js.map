{"version":3,"sources":["ErrorBoundary.jsx","graphql/link.jsx","styled/exports.jsx","components/cat/cardState.jsx","components/cat/image.jsx","components/buttons/button.jsx","components/buttons/upvote.jsx","components/buttons/downvote.jsx","components/cat/points.jsx","components/cat/controls.jsx","components/cat/card.jsx","components/layout/header.jsx","components/layout/footer.jsx","components/cat/FetchCat.jsx","App.js","serviceWorker.js","index.js"],"names":["ErrorBoundary","props","state","hasError","error","errorInfo","this","children","React","Component","app","Realm","getValidAccessToken","a","currentUser","logIn","anonymous","refreshCustomData","accessToken","apolloClient","ApolloClient","link","HttpLink","uri","fetch","options","headers","Authorization","cache","InMemoryCache","typePolicies","Cards","keyFields","Wrapper","styled","main","Header","header","Footer","footer","Card","div","Controls","Button","button","ControlButton","Upvote","Downvote","FetchCat","Points","StyledComponents","Styled","rest","merge","nodes","rules","compose","flatten","pluck","cardListState","atom","key","default","cardItemState","atomFamily","id","url","points","vote","selectedCardIdState","Image","selector","get","set","newCardValue","src","alt","onClick","onHandleClick","value","Button_UpVote","active","icon","process","DownVote","card","useRecoilValue","pointStyle","color","numberStyle","height","width","numbers","toString","play","GET_ONE_CARD","gql","UPDATE_ONE_CARD","useMutation","updatePoints","getPoints","query","refetch","useQuery","skip","variables","useImperativeQuery","useRecoilState","cardState","setCard","upvote","Promise","resolve","reject","data","then","catch","console","cardData","_id","useEffect","role","aria-label","href","title","Date","getFullYear","ADD_CARD","cardList","setCardList","addCard","fetchCat","catData","json","response","insertOneCard","newCard","GET_CARDS","sortByState","App","sortBy","loading","message","selected","cards","map","log","sort","card_a","card_b","reverse","Boolean","window","location","hostname","match","ReactDOM","render","client","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b24ff0c9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error) {\r\n      // Update state so the next render will show the fallback UI.\r\n      return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error, errorInfo) {\r\n      // You can also log the error to an error reporting service\r\n      // logErrorToMyService(error, errorInfo);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return <h1>Something went wrong.</h1>;\r\n      }\r\n  \r\n      return this.props.children; \r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","import { ApolloClient, InMemoryCache, HttpLink } from '@apollo/client';\r\nimport * as Realm from \"realm-web\";\r\n\r\nconst APP_ID = \"catreact-lkwiu\";\r\nconst app = new Realm.App(APP_ID);\r\n\r\nasync function getValidAccessToken() {\r\n\tif (!app.currentUser) {\r\n\t\tawait app.logIn(Realm.Credentials.anonymous());\r\n\t} else {\r\n\t\tawait app.currentUser.refreshCustomData();\r\n\t}\r\n\r\n\treturn app.currentUser.accessToken;\r\n}\r\n\r\nexport const apolloClient = new ApolloClient({\r\n\tlink: new HttpLink({\r\n\t\turi: `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`,\r\n\r\n\t\tfetch: async (uri, options) => {\r\n\t\t\tconst accessToken = await getValidAccessToken();\r\n\t\t\toptions.headers.Authorization = `Bearer ${accessToken}`;\r\n\t\t\treturn fetch(uri, options);\r\n\t\t},\r\n\t}),\r\n\r\n\tcache: new InMemoryCache({\r\n\t\ttypePolicies: {\r\n\t\t\tCards: {\r\n\t\t\t\tkeyFields: [\"_id\", \"url\", \"points\"]\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n});","import React from 'react'\r\nimport {compose, flatten, pluck} from 'ramda'\r\nimport styled from 'styled-components'\r\n\r\nconst Wrapper = styled.main`\r\n    width: 100%;\r\n    max-width: 800px;\r\n    height: auto;\r\n    margin: 0 auto;\r\n    background: #2f3136;\r\n    box-sizing: border-box;\r\n\r\n    padding: 30px 50px 30px 50px;\r\n\r\n    @media(max-width:680px;) {\r\n\t    padding: 30px 25px 30px 25px;\r\n    }\r\n\r\n    img {\r\n        border: 0px;\r\n        width: 100%;\r\n        height: auto;\r\n        margin: 0 0 10px 0;\r\n        padding: 0;\r\n    }\r\n`;\r\n\r\nconst Header = styled.header`\r\n    #mobile {\r\n        display: none;\r\n    }\r\n\r\n    #desktop {\r\n        display: block;\r\n    }\r\n\r\n    @media(max-width:680px) {\r\n        #mobile {\r\n            display: block;\r\n        }\r\n\r\n        #desktop {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    padding: 10px;\r\n\r\n    & img {\r\n        border:0px;\r\n        width: 100%;\r\n        height: auto;\r\n        margin: 0 0 10px 0;\r\n        box-sizing: border-box;\r\n    }\r\n`\r\n\r\nconst Footer = styled.footer`\r\n\twidth: 100%\r\n\theight: auto;\r\n\ttext-align: center;\r\n    color: #c66df9;\r\n    \r\n    & a {\r\n        color: white;\r\n    }\r\n`\r\n\r\nconst Card = styled.div`\r\n\tpadding: 15px;\r\n\tmargin-bottom: 30px;\r\n\tbackground: #3b3e45;\r\n\tborder-radius: 4px;\r\n\tbox-shadow: 0px 3px 7px #202225;\r\n`\r\n\r\nconst Controls = styled.div`\r\n    padding: 15px;\r\n    display: flex;\r\n    flex-flow: row;\r\n    justify-content: space-between;\r\n`\r\n\r\nconst Button = styled.button`\r\n    cursor: pointer;\r\n    padding: 15px 20px 15px 20px;\r\n    margin-top: -12px;\r\n    background: none;\r\n    border: none;\r\n    border-radius: none;\r\n\r\n    & img {\r\n        width: 100%;\r\n        height: auto;\r\n        border-radius: none;\r\n    }\r\n`\r\n\r\nconst ControlButton = styled.button`\r\n    height:52px;\r\n    width: 60px;\r\n    padding: 0;\r\n`\r\n\r\nconst Upvote = styled.button`\r\n    float: left;\r\n`\r\n\r\nconst Downvote = styled.button`\r\n    float: right;\r\n`\r\n\r\nconst FetchCat = styled.button`\r\n    width: 100%;\r\n    margin: 0 0 20px 0;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    font-size: 27px;\r\n    background: #c66df9;\r\n    color: #ffffff;\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    box-sizing:border-box;\r\n    \r\n    :hover {\r\n        color: #c66df9;\r\n        background: #ffffff;\r\n    }\r\n`\r\n\r\nconst Points = styled.div`\r\n    max-width: 10em;\r\n    overflow: hidden;\r\n`\r\n\r\nconst StyledComponents = styled(styled.div``)``;\r\n\r\nconst Styled = ({children, ...rest}) => (\r\n    <StyledComponents {...rest}>{children}</StyledComponents>\r\n);\r\n\r\nconst merge = (...nodes) => {\r\n\tconst rules = compose(\r\n\t\tflatten,\r\n\t\tpluck(\"rules\"),\r\n\t\tpluck(\"componentStyle\")\r\n\t)(nodes);\r\n\treturn styled.div`\r\n\t\t${rules}\r\n\t`;\r\n};\r\n\r\nStyled.Wrapper = Wrapper;\r\nStyled.Header = Header;\r\nStyled.Footer = Footer;\r\n\r\nStyled.Card = Card;\r\nStyled.Controls = Controls;\r\n\r\nStyled.Button = Button;\r\nStyled.FetchCat = merge(Button, FetchCat);\r\n\r\nStyled.Upvote = merge(Button, ControlButton, Upvote)\r\nStyled.Downvote = merge(Button, ControlButton, Downvote)\r\n\r\nStyled.Points = Points;\r\n\r\nexport default Styled","import { atomFamily, atom, selector } from 'recoil';\r\n\r\n//Cards state handling\r\nexport const cardListState = atom({\r\n    key: 'cards',\r\n    default: []\r\n});\r\n\r\n//Card item state handling\r\nexport const cardItemState = atomFamily({\r\n    key: 'card',\r\n    default: {id: '', url: '', points: 0, vote: 0}\r\n})\r\n\r\nexport const selectedCardIdState = atom({\r\n    key: 'selectedCardId',\r\n    default: null\r\n})\r\n\r\nexport const selectedCardState = selector({\r\n    key: 'selectedCard',\r\n    get: ({get}) => {\r\n        const id = get(selectedCardIdState);\r\n\r\n        if(id != null) {\r\n            return get(cardItemState(id));\r\n        }\r\n    },\r\n    set: ({set, get}, newCardValue) => {\r\n        const id = get(selectedCardIdState);\r\n\r\n        if(id != null) {\r\n            set(cardItemState(id), newCardValue);\r\n        }\r\n    }\r\n});","import React, { useEffect } from 'react';\r\n\r\nconst Image = ({url}) => {\r\n    return (\r\n        <img src={url} alt=\"\" />\r\n    );\r\n}\r\n\r\nexport default Image;","import React, { Fragment } from 'react';\r\n\r\nconst Button = (props) => {\r\n\r\n    const handleClick = () => {\r\n        props.onHandleClick();\r\n    }\r\n\r\n    return (\r\n        <div onClick={handleClick}>{props.value}</div>\r\n    );\r\n}\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\n\r\n//Components\r\nimport Styled from '../../styled/exports'\r\nimport {Button} from './exports';\r\n\r\nclass Button_UpVote extends Component {\r\n    state = {\r\n        active: false,\r\n        icon: \"\"\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Styled.Upvote>\r\n                <Button\r\n                    onHandleClick={this.props.onHandleClick}\r\n                    value={\r\n                        <img src={`${process.env.PUBLIC_URL}/images/upvote-claw.png`} alt=\"\" />\r\n                    }\r\n                />\r\n            </Styled.Upvote>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button_UpVote;","import React from 'react';\r\n\r\n//Components\r\nimport Styled from '../../styled/exports'\r\nimport {Button} from './exports';\r\n\r\nconst DownVote = (props) => {\r\n    return (\r\n        <Styled.Downvote>\r\n            <Button\r\n                onHandleClick={props.onHandleClick}\r\n                value={\r\n                    <img src={`${process.env.PUBLIC_URL}/images/downvote-claw.png`} alt=\"\" />\r\n                }\r\n            />\r\n        </Styled.Downvote>\r\n    );\r\n}\r\nexport default DownVote;","import React from 'react';\r\n\r\nimport FlipNumbers from 'react-flip-numbers'\r\n\r\nimport { cardItemState } from './cardState'\r\nimport { useRecoilValue } from 'recoil';\r\nimport Styled from '../../styled/exports';\r\n\r\nconst Points = ({id}) => {\r\n    const card = useRecoilValue(cardItemState(id));\r\n\r\n    const pointStyle = {\r\n        color: [\"#f10033\", \"#fff\", \"#28c120\"][card.vote + 1]\r\n    }\r\n\r\n    return (\r\n        <Styled.Points>\r\n            <FlipNumbers numberStyle={pointStyle} height={28} width={14} color=\"\" numbers={card.points.toString()} play />\r\n        </Styled.Points>\r\n    );\r\n}\r\n\r\nexport default Points;","import React from 'react'\r\nimport { gql, useMutation, useQuery } from '@apollo/client';\r\n\r\nimport { cardItemState } from './cardState'\r\nimport { useRecoilState } from 'recoil';\r\n\r\n//Components\r\nimport Styled from '../../styled/exports'\r\n\r\nimport {UpVote, DownVote} from '../buttons/exports'\r\nimport Points from './points'\r\n\r\nconst GET_ONE_CARD = gql`\r\nquery Card($_id: ObjectId!) {\r\n    card (query:{_id: $_id}) {\r\n        _id\r\n        points\r\n    }\r\n}`;\r\n\r\nconst UPDATE_ONE_CARD = gql`\r\nmutation ($id: ObjectId, $points: Int!){\r\n    updateOneCard(\r\n        query: {_id: $id}\r\n        set: {points: $points}\r\n    ) {\r\n        points\r\n    }\r\n}`;\r\n\r\nconst useImperativeQuery = (query) => {\r\n    const { refetch } = useQuery(query, {skip: true});\r\n      \r\n    const imperativelyCallQuery = ({variables}) => {\r\n      return refetch(variables);\r\n    }\r\n      \r\n    return imperativelyCallQuery;\r\n}\r\n\r\nexport const Controls = ({id}) => {\r\n    const [updatePoints] = useMutation(UPDATE_ONE_CARD);\r\n    const getPoints = useImperativeQuery(GET_ONE_CARD);\r\n\r\n    const [cardState, setCard] = useRecoilState(cardItemState(id));\r\n\r\n    const vote = (upvote) => {\r\n        new Promise(async (resolve, reject) => {\r\n            const {data: {card: {points}}} = await getPoints({variables: {\"_id\": id}});\r\n            \r\n            switch(cardState.vote) {\r\n                case(0): {\r\n                    // If vote = 0, and upvote = 1, we want to increment with one.\r\n                    // Else if vote = 0 and upvote = 0, we want to decrement with one.\r\n                    return resolve(upvote ? {points: points + 1, vote: 1} : {points: points - 1, vote: -1});\r\n                }\r\n\r\n                case(1): {\r\n                    // If vote = 1, and upvote = 1, we want to decrement with one.\r\n                    // Else if vote = 1 and upvote = 0, we want to decrement with two.\r\n                    return resolve(upvote ? {points: points - 1, vote: 0} : {points: points - 2, vote: -1});\r\n                }\r\n\r\n                case(-1): {\r\n                    // If vote = -1, and upvote = 1, we want to increment with two.\r\n                    // Else if vote = -1 and upvote = 0, we want to increment with one.\r\n                    return resolve(upvote ? {points: points + 2, vote: 1} : {points: points + 1, vote: 0});\r\n                }\r\n\r\n                default: {\r\n                    return reject(\"Unable to vote\");\r\n                }\r\n            }\r\n        })\r\n        .then(({points, vote}) => {\r\n            setCard({...cardState, points, vote});\r\n            updatePoints({variables: {\"id\": cardState.id, \"points\": points}});\r\n        })\r\n        .catch(console.error);\r\n    }\r\n\r\n    return (\r\n        <Styled.Controls>\r\n            <UpVote onHandleClick={() => {\r\n                vote(1);\r\n            }} />\r\n            \r\n            <Points id={id} />\r\n\r\n            <DownVote onHandleClick={() => {\r\n                vote(0);\r\n            }} />\r\n        </Styled.Controls>\r\n    );\r\n}\r\n\r\nconst controlStyle = {\r\n    display: 'flex',\r\n    flexFlow: 'row',\r\n    justifyContent: 'space-between',\r\n    alignSelf: 'center',\r\n    width: '20em'\r\n}","import React, { useEffect } from 'react';\r\n\r\nimport { cardItemState } from './cardState'\r\nimport { useRecoilState } from 'recoil';\r\n\r\n//Components\r\nimport Styled from '../../styled/exports';\r\n\r\nimport Image from './image';\r\nimport { Controls } from './controls';\r\n\r\nconst Card = ({cardData}) => {\r\n    const [card, setCard] = useRecoilState(cardItemState(cardData._id));\r\n    \r\n    useEffect(() => {\r\n        setCard({...card,\r\n            id: cardData._id,\r\n            url: cardData.url,\r\n            points: cardData.points,\r\n            vote: 0\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <Styled.Card>\r\n            <Image url={cardData.url} />\r\n            <Controls id={card.id} />\r\n        </Styled.Card>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\n\r\nimport Styled from '../../styled/exports'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Styled.Header>\r\n            <img id=\"desktop\" src={process.env.PUBLIC_URL + \"/images/cat-react-logo-emoji-DT.png\"} />\r\n            <img id=\"mobile\" src={process.env.PUBLIC_URL + \"/images/cat-react-logo-emoji-mobile.png\"} />\r\n        </Styled.Header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nimport Styled from '../../styled/exports'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Styled.Footer>\r\n            <span>Made with <span role=\"img\" aria-label=\"Sparkling Heart\">💖</span> by </span>\r\n            <a href=\"https://thelifeisyours.no/\" title=\"thelifeisyours.no/\">TheLifeIsYours</a>\r\n            <span> © {new Date().getFullYear()}</span>\r\n        </Styled.Footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { useRecoilState } from 'recoil';\r\n\r\nimport Button from '../buttons/button';\r\nimport Card from './card';\r\n\r\nimport { cardListState } from './cardState';\r\n\r\nimport Styled from '../../styled/exports'\r\n\r\nconst ADD_CARD = gql`\r\nmutation AddCard($url: String!) {\r\n\tinsertOneCard(\r\n\t\tdata: {\r\n\t\t\turl: $url,\r\n\t\t\tpoints: 0\r\n\t\t}\r\n\t) {\r\n\t\t_id\r\n\t\turl\r\n\t\tpoints\r\n\t}\r\n}`;\r\n\r\nconst FetchCat = () => {\r\n   \r\n\t//State handling\r\n\tconst [cardList, setCardList] = useRecoilState(cardListState);\r\n\tconst [addCard] = useMutation(ADD_CARD);\r\n\r\n\tconst fetchCat = async () => {\r\n\t\tlet catData = await fetch(\"https://api.thecatapi.com/v1/images/search?size=full\");\r\n\t\tcatData = await catData.json();\r\n\r\n\t\taddCard({variables: {url: catData[0][\"url\"]}})\r\n\t\t.then((response) => {\r\n\t\t\tconst data = response.data.insertOneCard;\r\n\r\n\t\t\tconst newCard = <Card key={data._id} cardData={data} />\r\n\r\n\t\t\tsetCardList([newCard, ...cardList]);\r\n\t\t}).catch(console.error)\r\n\t}\r\n\r\n    return (\r\n        <Styled.FetchCat>\r\n            <Button onHandleClick={fetchCat} value=\"Fetch Cat\" />\r\n        </Styled.FetchCat>\r\n    )\r\n}\r\n\r\nexport default FetchCat","import React from 'react'\nimport { gql, useQuery } from '@apollo/client';\nimport { useRecoilState, atom } from 'recoil';\n\n//Components\nimport Styled from './styled/exports'\n\nimport Card from './components/cat/card'\n\nimport {Header, Footer} from './components/layout/exports'\nimport { cardListState } from './components/cat/cardState'\nimport { Select } from './components/select/exports'\nimport FetchCat from './components/cat/FetchCat';\n\n\nconst GET_CARDS = gql`\nquery GetCards {\n\tcards {\n\t\t_id\n\t\turl\n\t\tpoints\n\t}\n}`;\n\nconst sortByState = new atom({\n\tkey: 'sortBy',\n\tdefault: {\n\t\t\"selected\": '',\n\t\t\"options\": [\n\t\t\t\"highest scoring\",\n\t\t\t\"newest\"\n\t\t]\n\t}\n});\n\n\nfunction App() {\n\tconst [sortBy, setSortBy] = useRecoilState(sortByState);\n\tconst {loading, error, data} = useQuery(GET_CARDS)\n\n\t//State handling\n\tconst [cardList, setCardList] = useRecoilState(cardListState);\n\n\tif(loading) return <div>Loading ...</div>\n\tif(error) return <div>Error: {error.message}</div>\n\n\treturn (\n\t\t<Styled.Wrapper>\n\t\t\t<Header />\n\t\t\t<FetchCat />\n\n\t\t\t{/* <div>\n\t\t\t\t<span>Sort by </span>\n\t\t\t\t<Select value={sortBy.selected} onHandleChange={(event) => {\n\t\t\t\t\tconsole.log(event);\n\t\t\t\t\t// setSortBy(sortBy.selected)\n\t\t\t\t}} options={sortBy.options}/>\n\t\t\t</div>\n\n\t\t\t<h1>Ordered by {sortBy.selected}</h1> */}\n\t\t\t\n\t\t\t<div>\n\t\t\t\t{cardList}\n\t\t\t\t{\n\t\t\t\t\t(() => {\n\t\t\t\t\t\tswitch(sortBy.selected) {\n\t\t\t\t\t\t\tcase(sortBy.options[0]): {\n\t\t\t\t\t\t\t\treturn data.cards.map((cardData) => {\n\t\t\t\t\t\t\t\t\tconsole.log(cardData);\n\t\t\t\t\t\t\t\t\treturn <Card key={cardData._id} cardData={cardData} />\n\t\t\t\t\t\t\t\t}).sort((card_a, card_b) => {\n\t\t\t\t\t\t\t\t\tconsole.log(card_a, card_b);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase(sortBy.options[1]): {\n\t\t\t\t\t\t\t\treturn data.cards.map((cardData) => {\n\t\t\t\t\t\t\t\t\tconsole.log(cardData);\n\t\t\t\t\t\t\t\t\treturn <Card key={cardData._id} cardData={cardData} />\n\t\t\t\t\t\t\t\t}).reverse()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\treturn data.cards.map((cardData) => {\n\t\t\t\t\t\t\t\t\tconsole.log(cardData);\n\t\t\t\t\t\t\t\t\treturn <Card key={cardData._id} cardData={cardData} />\n\t\t\t\t\t\t\t\t}).reverse()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})()\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<Footer />\n\t\t</Styled.Wrapper>\n\t)\n\n\t\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport ErrorBoundary from './ErrorBoundary'\n\nimport { RecoilRoot } from 'recoil';\n\nimport { ApolloProvider } from '@apollo/client';\nimport { apolloClient } from './graphql/link'\n\nimport App from './App';\nimport './App.css';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t// <React.StrictMode>\n\t\t<ErrorBoundary>\n\t\t\t<RecoilRoot>\n\t\t\t\t<ApolloProvider client={apolloClient}>\n\t\t\t\t\t<App />\n\t\t\t\t</ApolloProvider>\n\t\t\t</RecoilRoot>\n\t\t</ErrorBoundary>\n\t// </React.StrictMode>\n\t,\n\tdocument.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}